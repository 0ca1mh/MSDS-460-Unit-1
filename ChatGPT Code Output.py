# -*- coding: utf-8 -*-
"""MSDS460-Unit1-ChatGPT Output.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BSdge3L1MCDXe5UkyjA49HYWxQEdXspB
"""

from scipy.optimize import linprog

# Costs per serving
costs = [1.18, 0.90, 1.15, 1.10, 0.83]

# Coefficients for the constraints
# Sodium, Calories, Protein, Calcium, Iron, Potassium
nutrition_constraints = [
    [60, 65, 380, 160, 230],  # Sodium (mg)
    [-120, -20, -170, -190, -80],  # Calories (kcal)
    [-15, -2, -9, -4, -9],         # Protein (g)
    [-180, -80, -20, 0, -30],      # Calcium (mg)
    [-0.2, -2.7, -1.2, -0.8, -0.9], # Iron (mg)
    [-240, 0, -260, -100, -110]    # Potassium (mg)
]

# Nutritional requirements (b)
# Sodium max, others min
rhs_ineq = [5000, -2000, -50, -1300, -18, -4700]

# Bounds for variables (servings must be non-negative)
x_bounds = [(0, None)] * 5

# Solve the linear programming problem
result = linprog(c=costs, A_ub=nutrition_constraints, b_ub=rhs_ineq, bounds=x_bounds, method="highs")

# Extract the servings for each food
servings_per_food = result.x

# Display the result
print("Servings of each food per week:")
print(f"Yogurt: {servings_per_food[0]:.2f}")
print(f"Spinach: {servings_per_food[1]:.2f}")
print(f"Chickpea Patties: {servings_per_food[2]:.2f}")
print(f"Nature Valley Bars: {servings_per_food[3]:.2f}")
print(f"Vegetarian Sausages: {servings_per_food[4]:.2f}")
print(f"Total Cost: ${result.fun:.2f}")
